version: "3.7"
services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
#    networks:
#      - back-tier
    network_mode: bridge
    links:
      - nodeexporter:nodeexporter
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
      - nodeexporter
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    restart: always
    ports:
      - 9100:9100
  #    networks:
  #      - back-tier
    network_mode: bridge
  #    deploy:
  #      mode: global
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    ports:
      - 9093:9093
  #    networks:
  #      - back-tier
    network_mode: bridge
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://10.22.66.116:9093'

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    restart: always
    ports:
      - 8080:8080
  #    networks:
  #      - back-tier
    network_mode: bridge
  #    deploy:
  #      mode: global
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    user: "104"
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus
    ports:
      - 3000:3000
  #    networks:
  #      - back-tier
  #      - front-tier

    network_mode: bridge
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false

networks:
  #  front-tier:
  #  back-tier:
  default:
    external:
      name: bridge

volumes:
  prometheus_data:
    external: true
  grafana_data:
    external: true
  alertmanager_data:
    external: true
